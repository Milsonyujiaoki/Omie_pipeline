#!/usr/bin/env python3
"""
Configura√ß√µes otimizadas para resolver erros 425/500 na pipeline
"""

# =============================================================================
# CONFIGURA√á√ïES CORRIGIDAS PARA EVITAR ERROS 425/500
# =============================================================================

# PROBLEMA IDENTIFICADO:
# - Pipeline complexa usa concorr√™ncia excessiva (4 simult√¢neas + 10 downloads)
# - Extrator funcional usa execu√ß√£o sequencial (1 por vez)
# - API Omie tem rate limit rigoroso que a pipeline excede

# SOLU√á√ïES PROPOSTAS:

### 1. REDUZIR CONCORR√äNCIA DRASTICAMENTE
CONFIGURACAO_CONSERVADORA = {
    "calls_per_second": 1,           # Apenas 1 call simult√¢neo (n√£o 4)
    "max_concurrent_downloads": 1,   # Apenas 1 download simult√¢neo (n√£o 10)
    "delay_entre_requests": 2.0,     # 2 segundos entre requests
    "max_retries": 2,                # Menos retries (n√£o 3+)
    "timeout": 30                    # Timeout menor
}

### 2. IMPLEMENTAR RATE LIMITING REAL
CONFIGURACAO_RATE_LIMITED = {
    "calls_per_second": 0.5,         # 1 call a cada 2 segundos
    "burst_control": True,           # Controle de burst
    "adaptive_delay": True,          # Delay adaptativo baseado em resposta
    "circuit_breaker": True          # Circuit breaker para erros consecutivos
}

### 3. USAR ESTRAT√âGIA DO EXTRATOR FUNCIONAL
CONFIGURACAO_SEQUENCIAL = {
    "modo_execucao": "sequencial",   # For√ßa execu√ß√£o sequencial
    "async_disabled": True,          # Desabilita processamento ass√≠ncrono
    "batch_size": 50,                # Lotes menores (n√£o 500)
    "delay_fixo": 1.0               # Delay fixo como no funcional
}

### 4. CONFIGURA√á√ÉO H√çBRIDA (RECOMENDADA)
CONFIGURACAO_OTIMIZADA = {
    "calls_per_second": 2,           # M√°ximo 2 simult√¢neas
    "max_concurrent_downloads": 2,   # M√°ximo 2 downloads
    "delay_minimo": 1.5,            # M√≠nimo 1.5s entre calls
    "exponential_backoff": True,     # Backoff exponencial em erros
    "fail_fast": True,               # Falha r√°pida em erros 425
    "health_check": True             # Monitoramento de sa√∫de da API
}

# =============================================================================
# MUDAN√áAS ESPEC√çFICAS NO C√ìDIGO
# =============================================================================

print("=== MUDAN√áAS RECOMENDADAS ===")
print()

print("1. ARQUIVO: configuracao.ini")
print("   [api_speed]")
print("   calls_per_second = 1  # REDUZIR DE 4 PARA 1")
print()

print("2. ARQUIVO: src/omie_client_async.py")
print("   # ALTERAR:")
print("   self.semaphore = asyncio.Semaphore(1)  # Apenas 1 simult√¢neo")
print()

print("3. ARQUIVO: src/extrator_async.py")
print("   # ALTERAR:")
print("   MAX_CONCURRENT_DOWNLOADS = 1  # Apenas 1 download")
print()

print("4. ADICIONALMENTE:")
print("   - Implementar delay m√≠nimo de 2 segundos entre requisi√ß√µes")
print("   - Desabilitar retry agressivo")
print("   - Monitorar erros 425 e pausar temporariamente")
print()

# =============================================================================
# IMPLEMENTA√á√ÉO PR√ÅTICA
# =============================================================================

def criar_configuracao_conservadora():
    """Cria arquivo de configura√ß√£o conservadora"""
    config_text = """[omie_api]
app_key = 5702859630468
app_secret = 1cf8d99fa820c9cc7af243162331d0bf
base_url_nf = https://app.omie.com.br/api/v1/produtos/nfconsultar/
base_url_xml = https://app.omie.com.br/api/v1/produtos/dfedocs/

[query_params]
start_date = 19/07/2025
end_date = 31/07/2025
records_per_page = 100

[api_speed]
calls_per_second = 1

[paths]
resultado_dir = C:/milson/extrator_omie_v3/resultado
db_name = omie.db
caminho_config_ini = configuracao.ini

[compactador]
arquivos_por_pasta = 10000
max_workers = 1

[ONEDRIVE]
upload_onedrive = True
pasta_destino = Documentos Compartilhados
upload_max_retries = 3
upload_backoff_factor = 2.0
upload_retry_status = 429,500,502,503,504

[pipeline]
batch_size = 100
max_workers = 1
modo_hibrido_ativo = false
min_erros_para_reprocessamento = 50000
reprocessar_automaticamente = false
apenas_normal = true
"""
    
    with open('configuracao_conservadora.ini', 'w', encoding='utf-8') as f:
        f.write(config_text)
    
    print("‚úÖ Arquivo 'configuracao_conservadora.ini' criado")
    print("   Use: python main.py --config configuracao_conservadora.ini")

if __name__ == "__main__":
    print("üîß DIAGN√ìSTICO: Pipeline vs Extrator Funcional")
    print("=" * 60)
    print()
    
    print("‚ùå PIPELINE COMPLEXA (FALHA):")
    print("   ‚Ä¢ 4 requisi√ß√µes simult√¢neas")
    print("   ‚Ä¢ 10 downloads paralelos") 
    print("   ‚Ä¢ Retry agressivo")
    print("   ‚Ä¢ Total: at√© 14 opera√ß√µes simult√¢neas")
    print()
    
    print("‚úÖ EXTRATOR FUNCIONAL (FUNCIONA):")
    print("   ‚Ä¢ 1 requisi√ß√£o sequencial")
    print("   ‚Ä¢ Delay simples entre calls")
    print("   ‚Ä¢ Retry b√°sico")
    print("   ‚Ä¢ Total: 1 opera√ß√£o por vez")
    print()
    
    print("üéØ CONCLUS√ÉO:")
    print("   A API Omie N√ÉO suporta alta concorr√™ncia")
    print("   Rate limit rigoroso causa erros 425/500")
    print("   Solu√ß√£o: Reduzir drasticamente a concorr√™ncia")
    print()
    
    criar_configuracao_conservadora()
