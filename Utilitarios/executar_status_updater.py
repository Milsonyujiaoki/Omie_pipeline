"""
UTILIT√ÅRIO PARA ATUALIZA√á√ÉO DE STATUS NFE
Executa atualiza√ß√£o de status das notas fiscais usando a API Omie.
"""

import sys
import asyncio
import logging
from pathlib import Path

# Adiciona o diret√≥rio raiz ao path
sys.path.insert(0, str(Path(__file__).parent.parent))

from src.status_nfe_updater import executar_atualizacao_status_nfe


async def main():
    """Fun√ß√£o principal para execu√ß√£o do utilit√°rio."""
    
    # Configura√ß√£o de logging
    log_dir = Path("log")
    log_dir.mkdir(exist_ok=True)
    
    from datetime import datetime
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    log_file = log_dir / f"status_updater_{timestamp}.log"
    
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(levelname)s - %(message)s',
        handlers=[
            logging.FileHandler(log_file, encoding='utf-8'),
            logging.StreamHandler(sys.stdout)
        ]
    )
    
    logger = logging.getLogger(__name__)
    
    print("üîÑ SISTEMA DE ATUALIZA√á√ÉO DE STATUS NFE")
    print("=" * 60)
    print(f"Log: {log_file}")
    print()
    
    # Par√¢metros da linha de comando
    dry_run = "--dry-run" in sys.argv or "-n" in sys.argv
    test_mode = "--test" in sys.argv
    limite = 100 if test_mode else 10000000
    
    if dry_run:
        print("üß™ MODO SIMULA√á√ÉO ATIVADO")
        print("   (Nenhum dado ser√° alterado no banco)")
        print()
    
    if test_mode:
        print(f"üî¨ MODO TESTE ATIVADO - Processando apenas {limite} registros")
        print()
    
    try:
        logger.info("Iniciando atualiza√ß√£o de status das NFe...")
        
        # Executa atualiza√ß√£o
        sucesso = await executar_atualizacao_status_nfe(
            limite_notas=limite,
            dry_run=dry_run
        )
        
        if sucesso:
            print("‚úÖ Atualiza√ß√£o conclu√≠da com sucesso!")
            if dry_run:
                print("\nüí° Para executar efetivamente, execute novamente sem --dry-run")
        else:
            print("‚ùå Atualiza√ß√£o falhou! Verifique os logs para detalhes.")
            sys.exit(1)
            
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è  Opera√ß√£o cancelada pelo usu√°rio")
        sys.exit(1)
    except Exception as e:
        logger.error(f"Erro cr√≠tico: {e}")
        print(f"‚ùå Erro cr√≠tico: {e}")
        sys.exit(1)


def show_help():
    """Mostra ajuda sobre o uso do utilit√°rio."""
    print("""
üîÑ UTILIT√ÅRIO DE ATUALIZA√á√ÉO DE STATUS NFE
==========================================

DESCRI√á√ÉO:
  Consulta a API Omie para atualizar o status das notas fiscais
  no banco de dados local. √ötil para identificar notas canceladas,
  rejeitadas ou com outros status espec√≠ficos.

FUNCIONALIDADES:
  ‚úì Consulta endpoints da API Omie para obter status atual
  ‚úì Normaliza diferentes formatos de status
  ‚úì Atualiza banco de dados SQLite local
  ‚úì Processa em lotes para otimiza√ß√£o
  ‚úì Controle de taxa para respeitar limites da API
  ‚úì Logging detalhado com estat√≠sticas

USAGE:
  python executar_status_updater.py [op√ß√µes]

OP√á√ïES:
  --dry-run, -n    Executa em modo simula√ß√£o (n√£o altera dados)
  --test           Processa apenas 100 registros (modo teste)
  --help, -h       Mostra esta ajuda

EXEMPLOS:
  # Execu√ß√£o normal
  python executar_status_updater.py
  
  # Simula√ß√£o (n√£o altera dados)
  python executar_status_updater.py --dry-run
  
  # Teste com poucos registros
  python executar_status_updater.py --test --dry-run

CONFIGURA√á√ÉO:
  O utilit√°rio usa o arquivo 'configuracao.ini' na raiz do projeto
  para obter credenciais da API Omie e configura√ß√µes do banco.

LOGS:
  Os logs s√£o salvos em 'log/status_updater_YYYYMMDD_HHMMSS.log'
  
STATUS SUPORTADOS:
  ‚Ä¢ AUTORIZADA   - NFe autorizada pela SEFAZ
  ‚Ä¢ CANCELADA    - NFe cancelada
  ‚Ä¢ REJEITADA    - NFe rejeitada pela SEFAZ  
  ‚Ä¢ DENEGADA     - NFe denegada
  ‚Ä¢ INUTILIZADA  - NFe inutilizada
  ‚Ä¢ PROCESSANDO  - NFe em processamento
  ‚Ä¢ PENDENTE     - NFe pendente
  ‚Ä¢ INDEFINIDO   - Status n√£o identificado

ENDPOINTS UTILIZADOS:
  ‚Ä¢ ListarNFesEmitidas - Para consultas em lote
  ‚Ä¢ ObterNfe          - Para consultas individuais
""")


if __name__ == "__main__":
    if "--help" in sys.argv or "-h" in sys.argv:
        show_help()
        sys.exit(0)
    
    asyncio.run(main())
